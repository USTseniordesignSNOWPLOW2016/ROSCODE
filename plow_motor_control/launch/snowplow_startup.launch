<launch>
	<!-- configuring frames -->
	<param name="pub_map_odom_transform" value="true"/>
	<param name="map_frame" value="map"/>
	<param name="base_frame" value="base_frame"/>
	<param name="odom_frame" value="base_frame"/>
	
	<!-- include the rplidar-ros package -->
	<!-- <include file="$(find rplidar_ros-master)/launch/rplidar.launch"/> -->	
	
	 <include file="$(find snowplow_visualization)/launch/plow_sim_rviz.launch"/>

	<node pkg="plow_motor_control" type="motor_control" name="motor_control" output="screen"/>
	
	<node pkg="joy" type="joy_node" name="joystick"/>

	<node pkg="plow_motor_control_py" name="sabertooth_drive" type="sabertooth_drive.py" output="screen"/> 
	<!-- RPLIDAR initialization-->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	  <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
	  <param name="serial_baudrate"     type="int"    value="115200"/>
	  <param name="frame_id"            type="string" value="laser"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
	 </node> 
	<!-- Declare a transform between the base_link frame and the frame used in the map-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="base_link2frame" args="0 0 0 0 0 0 /base_link /my_frame 100"/> -->
	<!-- Declare a transform between the base_link and the laser (this is needed as the relationship between the laser itself and the base of the robot is needed for mapping-->
	<node pkg="tf" type="static_transform_publisher" name="base_link2laser" args="0 0 0 0 0 0 /base_link /laser 100"/>
 	<!-- Declare a transform between the base link and the map and the scanmatcher_frame-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="map_scanmatch_broadcaster" args="0 0 0 0 0 0 /map /scanmatcher_frame 100"/> -->
	<!-- Declare a transform between the base link and the map and nav frames-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0 0 0 0 /map /nav 100"/> -->
	<!-- Declare a transform between the nav and base_link frames-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="nav_baselink" args="0 0 0 0 0 0 /nav /base_link 100"/> -->
	<!-- Declare a transform between the laser and base_frame-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="base_frame2laser" args="0 0 0 0 0 0 /base_frame /laser 100"/> -->
	<!-- Declare a transform between the nav and base_link frames-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="nav2base_frame" args="0 0 0 0 0 0 /nav /base_frame 100"/> -->
	<!-- Declare a transform between the nav and base_link frames-->
	<!-- <node pkg="tf" type="static_transform_publisher" name="nav2base_footprint" args="0 0 0 0 0 0 /nav /base_footprint 100"/> -->
</launch>
