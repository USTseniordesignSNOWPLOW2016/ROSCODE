<launch>
	<!-- configuring frames -->
	<param name="pub_map_odom_transform" value="true"/>
	<param name="map_frame" value="map"/>
	<param name="base_frame" value="base_frame"/>
	<param name="odom_frame" value="base_frame"/>

	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
		<remap from="map" to="maphector"/>
		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="scan_topic" value="scan"/>

		<!-- Map size / start point -->
		<param name="map_resolution" value="0.025"/>
		<param name="map_size" value="2048"/>
		<param name="map_start_x" value="0.5"/>
		<param name="map_start_y" value="0.5" />
		<param name="laser_z_min_value" value="-2.5" />
		<param name="laser_z_max_value" value="7.5" />

		<!-- Map update parameters -->
		<param name="update_factor_free" value="0.4"/>
		<param name="update_factor_occupied" value="0.7" />    
		<param name="map_update_distance_thresh" value="0.2"/>
		<param name="map_update_angle_thresh" value="0.06" />

		<param name="pub_map_odom_transform" value="true"/>

		<!--
		  <param name="pub_drawings" value="true"/>
		  <param name="pub_debug_output" value="true"/>
		-->
	</node>

	
	<!-- include the rplidar-ros package -->

	<node pkg="plow_motor_control" type="motor_control" name="motor_control" output="screen"/>
	
	<node pkg="joy" type="joy_node" name="joystick"/>

	<node pkg="plow_motor_control_py" name="sabertooth_drive" type="sabertooth_drive.py" output="screen"/>
	<!-- RPLIDAR initialization-->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	  <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
	  <param name="serial_baudrate"     type="int"    value="115200"/>
	  <param name="frame_id"            type="string" value="laser"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
	 </node> 

	<!-- Declare a transform between the base_link and the laser (this is needed as the relationship between the laser itself and the base of the robot is needed for mapping-->
	<node pkg="tf" type="static_transform_publisher" name="base_link2laser" args="0 0 0 0 0 0 /base_link /laser 100"/>

	<node pkg="tf" type="static_transform_publisher" name="map_baselink_broadcaster" args="0 0 0 0 0 0 odom base_link 100"/>
 	
 	 <!-- Run the map server -->
 	 <arg name="map_file" default="$(find plow_waypoint_nav)/maps/map2.yaml"/>
	 <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

	 <!--- Run AMCL -->
	 <include file="$(find plow_waypoint_nav)/launch/amcl.launch" />

	<!-- <node pkg="plow_waypoint_nav" name="plow_nav_waypoint" type="plow_nav_waypoint.py"  output="screen"/> -->
	<!-- <node pkg="drop_waypoints_controller" name="drop_waypoints_xbox" type="drop_waypoints_xbox.py"  output="screen"/> -->
	<node pkg="waypoint_marker_display" name="waypoint_marker_display" type="marker_waypoint_display.py"  output="screen"/>


</launch>
